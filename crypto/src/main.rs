mod crypto;
mod utils;

use crate::crypto::{dsa::DSA, elgamal::ElGamal, rsa::RSA, Encrypt, Sign};
use crate::utils::bignum;

fn main() {
    let rsa = RSA {
        e: bignum(b"65537"),
        n: bignum(b"24285567456616572535053163704040517696339053520634523513959490724007229796719740152317361083535903559526887151910583738749192724073752114685883652689425560188238375621459958617205457390994531647966048552252431253837715142607154249583275263403961793022725225708928576824094708202567623969946919484541872521257547449677583916437272177792287910013177936025088702170345854171069059816126279489604018885163082286699535072424228488832207776143066543758831629156184365560217187829162278060910799742497812823133120175704776511913669284170673753127829411572441993508065373965371003598177072369409326086217971424873326320403767"),
        d: bignum(b"4246648504704608408253494301666300453179815269946314897996181755300408219332716208333566657267214776266507877395902919664704649554987247422070382529270746597452000925003145181396379780899298605149624126963590981719947747597204444820854395511076218747279110832420182345913382608319345876307913045956480447588505904098748546621165568873421092788829173712507771720454061237012649434229751644062202815204041718422716997993742509002869211664920269003099439680742846774758669152760830688242344700050431906885674769163678723468025888796520771344968669620518651547899167951600305545613239608787193640741107853748457567524673")
    };

    let elgamal = ElGamal {
        y: bignum(b"19807665444265041657990177107385033349747839926670669671385346779887167874349638280822801372810919990395863498154790640244438754036977740163782735915326218215020732086291478236345235716255836603410188555847043334823639271225009503959675200461464217135020809968239213787524669134970143391638737520877381736741234294852676687654189217772756223053069824285066683179699040712719155241983138335681604882270920880707772542759415275782192139967872091314569380301748781104585325131212122744030265022966524566056609327022825696274689322286018817050110030541738742416397112862361974086701732959305990984850610177647733174357595"),
        p: bignum(b"21184795224212536964062883050432832896219180043306745749507173456191006787311146854668821513315952228690166108340246881055280083954021140230360109139210549183430005605616829049480465189085545832479727332745387886538641769815794752311817699632294459913736902844395790405051970352731077204037998783513130589208851997845158638472072468616025046402553224295502860056712883342790113689935316985246818793713930252667398829988405042143167096182757216513627895445171115572143858787433983678864090060986677504505167265543059226905114937436266049720413372897671084091167754147649933819526873415745134475534382738086734552688143"),
        g: bignum(b"5"),
        x: bignum(b"1270742310900726690413026462488924015958858380202122408190957963265926396562890535592476096127516928825")
    };

    let dsa = DSA {
        y: bignum(b"10724392575130207156071095265641597303485892984432677155198160243874833612494142949396125374542186243165624569971691773432654567439240367909706445219719828407566860880184150096675886463333075597901899438944411768285518047404374844574637379248883947243547127317112321816149952128981946891128067470332020385770766406208444905612330088021679921652404504950961006753477156457704784219178166816133076168833926154370406480664919715566381132438484472750743002339128065378009284094527365506266826999182633125457061276960366686790260766865762855660374392088920250978820732228600679753002316993258157710832553602657970334455236"),
        p: bignum(b"18930220156430884707787581982667150040342430340581318144882873819932152076526785030251961196398351578194563868897190745374095251758424394261360805168806460656249703469940687759082462743640271637412219269681401266486363162406314424074519524348194521871456736447930149129093028417492206038678352211028807489939631756679248824839474394219858960509462855844515569789236313673678209369715806185856617488908074193110315943719105318695451712919337304296824652370502454793202621451876158511543613732739890414338549063471771127063877203894361662918416870845455155949361366086822291655022313839293705976131720601764349138188763"),
        q: bignum(b"77329472688943863782809684314309611412099174806793669931856388423150706393447"),
        g: bignum(b"9776352536598101331432253534187162046797971077269626288014571662233110493164650880686970679823027823782693979916732176955913010538621389580201197451835850449349401498615800410766032380854611786555966853817267325239512000930084764892283051664768149497273193030000400930558709969898151798576730413946075652301924503319572711955695693129578328117269721696248195211019503146843488075633287525582407824111700730431268482972630743457867358536579474264670693432213201731134512477024166751325249293155566771418339122598660995442996355382603925473715661262608962598234427508654831621526829645072886787047595607539558463000444"),
        x: bignum(b"67280696483525608869730051502255070481129155564254771476611158635103194927878"),
    };

    let m = bignum(b"3200871623");

    let rsa_encoded = rsa.encrypt(&m);
    println!("Encrypt: {} -> {:?}", m, rsa_encoded);
    let rsa_decoded = rsa.decrypt(&rsa_encoded);
    println!("Decrypt: {:?} -> {}", rsa_encoded, rsa_decoded);

    let elgamal_encoded = elgamal.encrypt(&m);
    println!("Encrypt: {} -> {:?}", m, elgamal_encoded);
    let elgamal_decoded = elgamal.decrypt(&elgamal_encoded);
    println!("Decrypt: {:?} -> {}", elgamal_encoded, elgamal_decoded);

    let dsa_signed = dsa.sign(&m);
    println!("Sign: {} -> {:?}", m, dsa_signed);
    let dsa_verified = dsa.verify(&m, &dsa_signed);
    println!("Verify: {:?} -> {}", dsa_signed, dsa_verified);
}
